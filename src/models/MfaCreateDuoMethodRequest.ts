/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MfaCreateDuoMethodRequest
 */
export interface MfaCreateDuoMethodRequest {
    /**
     * API host name for Duo.
     * @type {string}
     * @memberof MfaCreateDuoMethodRequest
     */
    api_hostname?: string;
    /**
     * Integration key for Duo.
     * @type {string}
     * @memberof MfaCreateDuoMethodRequest
     */
    integration_key?: string;
    /**
     * The unique name identifier for this MFA method.
     * @type {string}
     * @memberof MfaCreateDuoMethodRequest
     */
    method_name?: string;
    /**
     * Push information for Duo.
     * @type {string}
     * @memberof MfaCreateDuoMethodRequest
     */
    push_info?: string;
    /**
     * Secret key for Duo.
     * @type {string}
     * @memberof MfaCreateDuoMethodRequest
     */
    secret_key?: string;
    /**
     * If true, the user is reminded to use the passcode upon MFA validation. This option does not enforce using the passcode. Defaults to false.
     * @type {boolean}
     * @memberof MfaCreateDuoMethodRequest
     */
    use_passcode?: boolean;
    /**
     * A template string for mapping Identity names to MFA method names. Values to subtitute should be placed in {{}}. For example, "{{alias.name}}@example.com". Currently-supported mappings: alias.name: The name returned by the mount configured via the mount_accessor parameter If blank, the Alias's name field will be used as-is.
     * @type {string}
     * @memberof MfaCreateDuoMethodRequest
     */
    username_format?: string;
}

/**
 * Check if a given object implements the MfaCreateDuoMethodRequest interface.
 */
export function instanceOfMfaCreateDuoMethodRequest(value: object): value is MfaCreateDuoMethodRequest {
    return true;
}

export function MfaCreateDuoMethodRequestFromJSON(json: any): MfaCreateDuoMethodRequest {
    return MfaCreateDuoMethodRequestFromJSONTyped(json, false);
}

export function MfaCreateDuoMethodRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MfaCreateDuoMethodRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'api_hostname': json['api_hostname'] == null ? undefined : json['api_hostname'],
        'integration_key': json['integration_key'] == null ? undefined : json['integration_key'],
        'method_name': json['method_name'] == null ? undefined : json['method_name'],
        'push_info': json['push_info'] == null ? undefined : json['push_info'],
        'secret_key': json['secret_key'] == null ? undefined : json['secret_key'],
        'use_passcode': json['use_passcode'] == null ? undefined : json['use_passcode'],
        'username_format': json['username_format'] == null ? undefined : json['username_format'],
    };
}

export function MfaCreateDuoMethodRequestToJSON(json: any): MfaCreateDuoMethodRequest {
    return MfaCreateDuoMethodRequestToJSONTyped(json, false);
}

export function MfaCreateDuoMethodRequestToJSONTyped(value?: MfaCreateDuoMethodRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'api_hostname': value['api_hostname'],
        'integration_key': value['integration_key'],
        'method_name': value['method_name'],
        'push_info': value['push_info'],
        'secret_key': value['secret_key'],
        'use_passcode': value['use_passcode'],
        'username_format': value['username_format'],
    };
}


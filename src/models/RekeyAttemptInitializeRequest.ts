/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RekeyAttemptInitializeRequest
 */
export interface RekeyAttemptInitializeRequest {
    /**
     * Specifies if using PGP-encrypted keys, whether Vault should also store a plaintext backup of the PGP-encrypted keys.
     * @type {boolean}
     * @memberof RekeyAttemptInitializeRequest
     */
    backup?: boolean;
    /**
     * Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as secret_shares.
     * @type {Array<string>}
     * @memberof RekeyAttemptInitializeRequest
     */
    pgp_keys?: Array<string>;
    /**
     * Turns on verification functionality
     * @type {boolean}
     * @memberof RekeyAttemptInitializeRequest
     */
    require_verification?: boolean;
    /**
     * Specifies the number of shares to split the unseal key into.
     * @type {number}
     * @memberof RekeyAttemptInitializeRequest
     */
    secret_shares?: number;
    /**
     * Specifies the number of shares required to reconstruct the unseal key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as secret_shares.
     * @type {number}
     * @memberof RekeyAttemptInitializeRequest
     */
    secret_threshold?: number;
}

/**
 * Check if a given object implements the RekeyAttemptInitializeRequest interface.
 */
export function instanceOfRekeyAttemptInitializeRequest(value: object): value is RekeyAttemptInitializeRequest {
    return true;
}

export function RekeyAttemptInitializeRequestFromJSON(json: any): RekeyAttemptInitializeRequest {
    return RekeyAttemptInitializeRequestFromJSONTyped(json, false);
}

export function RekeyAttemptInitializeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RekeyAttemptInitializeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'backup': json['backup'] == null ? undefined : json['backup'],
        'pgp_keys': json['pgp_keys'] == null ? undefined : json['pgp_keys'],
        'require_verification': json['require_verification'] == null ? undefined : json['require_verification'],
        'secret_shares': json['secret_shares'] == null ? undefined : json['secret_shares'],
        'secret_threshold': json['secret_threshold'] == null ? undefined : json['secret_threshold'],
    };
}

export function RekeyAttemptInitializeRequestToJSON(json: any): RekeyAttemptInitializeRequest {
    return RekeyAttemptInitializeRequestToJSONTyped(json, false);
}

export function RekeyAttemptInitializeRequestToJSONTyped(value?: RekeyAttemptInitializeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'backup': value['backup'],
        'pgp_keys': value['pgp_keys'],
        'require_verification': value['require_verification'],
        'secret_shares': value['secret_shares'],
        'secret_threshold': value['secret_threshold'],
    };
}


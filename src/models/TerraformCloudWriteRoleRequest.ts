/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TerraformCloudWriteRoleRequest
 */
export interface TerraformCloudWriteRoleRequest {
    /**
     * Credential type to be used for the token. Can be either 'user', 'org', 'team', or 'team_legacy'(deprecated).
     * @type {string}
     * @memberof TerraformCloudWriteRoleRequest
     */
    credential_type?: string;
    /**
     * Description of the token created by the role
     * @type {string}
     * @memberof TerraformCloudWriteRoleRequest
     */
    description?: string;
    /**
     * Maximum time for role. If not set or set to 0, will use system default.
     * @type {string}
     * @memberof TerraformCloudWriteRoleRequest
     */
    max_ttl?: string;
    /**
     * Name of the Terraform Cloud or Enterprise organization
     * @type {string}
     * @memberof TerraformCloudWriteRoleRequest
     */
    organization?: string;
    /**
     * ID of the Terraform Cloud or Enterprise team under organization (e.g., settings/teams/team-xxxxxxxxxxxxx)
     * @type {string}
     * @memberof TerraformCloudWriteRoleRequest
     */
    team_id?: string;
    /**
     * Default lease for generated credentials. If not set or set to 0, will use system default.
     * @type {string}
     * @memberof TerraformCloudWriteRoleRequest
     */
    ttl?: string;
    /**
     * ID of the Terraform Cloud or Enterprise user (e.g., user-xxxxxxxxxxxxxxxx)
     * @type {string}
     * @memberof TerraformCloudWriteRoleRequest
     */
    user_id?: string;
}

/**
 * Check if a given object implements the TerraformCloudWriteRoleRequest interface.
 */
export function instanceOfTerraformCloudWriteRoleRequest(value: object): value is TerraformCloudWriteRoleRequest {
    return true;
}

export function TerraformCloudWriteRoleRequestFromJSON(json: any): TerraformCloudWriteRoleRequest {
    return TerraformCloudWriteRoleRequestFromJSONTyped(json, false);
}

export function TerraformCloudWriteRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TerraformCloudWriteRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'credential_type': json['credential_type'] == null ? undefined : json['credential_type'],
        'description': json['description'] == null ? undefined : json['description'],
        'max_ttl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'organization': json['organization'] == null ? undefined : json['organization'],
        'team_id': json['team_id'] == null ? undefined : json['team_id'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
        'user_id': json['user_id'] == null ? undefined : json['user_id'],
    };
}

export function TerraformCloudWriteRoleRequestToJSON(json: any): TerraformCloudWriteRoleRequest {
    return TerraformCloudWriteRoleRequestToJSONTyped(json, false);
}

export function TerraformCloudWriteRoleRequestToJSONTyped(value?: TerraformCloudWriteRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'credential_type': value['credential_type'],
        'description': value['description'],
        'max_ttl': value['max_ttl'],
        'organization': value['organization'],
        'team_id': value['team_id'],
        'ttl': value['ttl'],
        'user_id': value['user_id'],
    };
}


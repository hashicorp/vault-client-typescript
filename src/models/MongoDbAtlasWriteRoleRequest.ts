/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MongoDbAtlasWriteRoleRequest
 */
export interface MongoDbAtlasWriteRoleRequest {
    /**
     * Access list entry in CIDR notation to be added for the API key. Optional for organization and project keys.
     * @type {Array<string>}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    cidr_blocks?: Array<string>;
    /**
     * IP address to be added to the access list for the API key. Optional for organization and project keys.
     * @type {Array<string>}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    ip_addresses?: Array<string>;
    /**
     * The maximum allowed lifetime of credentials issued using this role.
     * @type {string}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    max_ttl?: string;
    /**
     * Organization ID required for an organization API key
     * @type {string}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    organization_id?: string;
    /**
     * Project ID the project API key belongs to.
     * @type {string}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    project_id?: string;
    /**
     * Roles assigned when an organization API Key is assigned to a project API key
     * @type {Array<string>}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    project_roles?: Array<string>;
    /**
     * List of roles that the API Key should be granted. A minimum of one role must be provided. Any roles provided must be valid for the assigned Project, required for organization and project keys.
     * @type {Array<string>}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    roles: Array<string>;
    /**
     * Duration in seconds after which the issued credential should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.
     * @type {string}
     * @memberof MongoDbAtlasWriteRoleRequest
     */
    ttl?: string;
}

/**
 * Check if a given object implements the MongoDbAtlasWriteRoleRequest interface.
 */
export function instanceOfMongoDbAtlasWriteRoleRequest(value: object): value is MongoDbAtlasWriteRoleRequest {
    if (!('roles' in value) || value['roles'] === undefined) return false;
    return true;
}

export function MongoDbAtlasWriteRoleRequestFromJSON(json: any): MongoDbAtlasWriteRoleRequest {
    return MongoDbAtlasWriteRoleRequestFromJSONTyped(json, false);
}

export function MongoDbAtlasWriteRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MongoDbAtlasWriteRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'cidr_blocks': json['cidr_blocks'] == null ? undefined : json['cidr_blocks'],
        'ip_addresses': json['ip_addresses'] == null ? undefined : json['ip_addresses'],
        'max_ttl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'organization_id': json['organization_id'] == null ? undefined : json['organization_id'],
        'project_id': json['project_id'] == null ? undefined : json['project_id'],
        'project_roles': json['project_roles'] == null ? undefined : json['project_roles'],
        'roles': json['roles'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
    };
}

export function MongoDbAtlasWriteRoleRequestToJSON(json: any): MongoDbAtlasWriteRoleRequest {
    return MongoDbAtlasWriteRoleRequestToJSONTyped(json, false);
}

export function MongoDbAtlasWriteRoleRequestToJSONTyped(value?: MongoDbAtlasWriteRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cidr_blocks': value['cidr_blocks'],
        'ip_addresses': value['ip_addresses'],
        'max_ttl': value['max_ttl'],
        'organization_id': value['organization_id'],
        'project_id': value['project_id'],
        'project_roles': value['project_roles'],
        'roles': value['roles'],
        'ttl': value['ttl'],
    };
}


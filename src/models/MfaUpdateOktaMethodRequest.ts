/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MfaUpdateOktaMethodRequest
 */
export interface MfaUpdateOktaMethodRequest {
    /**
     * Okta API key.
     * @type {string}
     * @memberof MfaUpdateOktaMethodRequest
     */
    api_token?: string;
    /**
     * The base domain to use for the Okta API. When not specified in the configuration, "okta.com" is used.
     * @type {string}
     * @memberof MfaUpdateOktaMethodRequest
     */
    base_url?: string;
    /**
     * The unique name identifier for this MFA method.
     * @type {string}
     * @memberof MfaUpdateOktaMethodRequest
     */
    method_name?: string;
    /**
     * Name of the organization to be used in the Okta API.
     * @type {string}
     * @memberof MfaUpdateOktaMethodRequest
     */
    org_name?: string;
    /**
     * If true, the username will only match the primary email for the account. Defaults to false.
     * @type {boolean}
     * @memberof MfaUpdateOktaMethodRequest
     */
    primary_email?: boolean;
    /**
     * (DEPRECATED) Use base_url instead.
     * @type {boolean}
     * @memberof MfaUpdateOktaMethodRequest
     */
    production?: boolean;
    /**
     * A template string for mapping Identity names to MFA method names. Values to substitute should be placed in {{}}. For example, "{{entity.name}}@example.com". If blank, the Entity's name field will be used as-is.
     * @type {string}
     * @memberof MfaUpdateOktaMethodRequest
     */
    username_format?: string;
}

/**
 * Check if a given object implements the MfaUpdateOktaMethodRequest interface.
 */
export function instanceOfMfaUpdateOktaMethodRequest(value: object): value is MfaUpdateOktaMethodRequest {
    return true;
}

export function MfaUpdateOktaMethodRequestFromJSON(json: any): MfaUpdateOktaMethodRequest {
    return MfaUpdateOktaMethodRequestFromJSONTyped(json, false);
}

export function MfaUpdateOktaMethodRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MfaUpdateOktaMethodRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'api_token': json['api_token'] == null ? undefined : json['api_token'],
        'base_url': json['base_url'] == null ? undefined : json['base_url'],
        'method_name': json['method_name'] == null ? undefined : json['method_name'],
        'org_name': json['org_name'] == null ? undefined : json['org_name'],
        'primary_email': json['primary_email'] == null ? undefined : json['primary_email'],
        'production': json['production'] == null ? undefined : json['production'],
        'username_format': json['username_format'] == null ? undefined : json['username_format'],
    };
}

export function MfaUpdateOktaMethodRequestToJSON(json: any): MfaUpdateOktaMethodRequest {
    return MfaUpdateOktaMethodRequestToJSONTyped(json, false);
}

export function MfaUpdateOktaMethodRequestToJSONTyped(value?: MfaUpdateOktaMethodRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'api_token': value['api_token'],
        'base_url': value['base_url'],
        'method_name': value['method_name'],
        'org_name': value['org_name'],
        'primary_email': value['primary_email'],
        'production': value['production'],
        'username_format': value['username_format'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SystemWriteStorageRaftSnapshotAutoConfigNameRequest
 */
export interface SystemWriteStorageRaftSnapshotAutoConfigNameRequest {
    /**
     * AWS access key ID
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_access_key_id?: string;
    /**
     * AWS bucket
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_bucket?: string;
    /**
     * Disable TLS for the AWS endpoint, intended only for testing
     * @type {boolean}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_disable_tls?: boolean;
    /**
     * Use KMS to encrypt bucket contents
     * @type {boolean}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_enable_kms?: boolean;
    /**
     * AWS endpoint, typically only set when using a non-AWS S3 instance like Minio
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_endpoint?: string;
    /**
     * Use the endpoint/bucket URL style instead of bucket.endpoint
     * @type {boolean}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_force_path_style?: boolean;
    /**
     * Use named KMS key
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_kms_key?: string;
    /**
     * AWS region
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_region?: string;
    /**
     * Use AES256 to encrypt bucket contents
     * @type {boolean}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_s3_server_side_encryption?: boolean;
    /**
     * AWS secret access key
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_secret_access_key?: string;
    /**
     * AWS session token
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    aws_session_token?: string;
    /**
     * Azure account key
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    azure_account_key?: string;
    /**
     * Azure account name
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    azure_account_name?: string;
    /**
     * Azure auth mode: shared, managed, or application
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    azure_auth_mode?: string;
    /**
     * Azure blob environment
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    azure_blob_environment?: string;
    /**
     * Azure client id
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    azure_client_id?: string;
    /**
     * Azure container name
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    azure_container_name?: string;
    /**
     * Azure blob storage endpoint
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    azure_endpoint?: string;
    /**
     * file/object prefix prepended to snapshot ID
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    file_prefix?: string;
    /**
     * Disable TLS, normally only for testing
     * @type {boolean}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    google_disable_tls?: boolean;
    /**
     * GCS endpoint
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    google_endpoint?: string;
    /**
     * GCS bucket
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    google_gcs_bucket?: string;
    /**
     * Service account key in JSON format
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    google_service_account_key?: string;
    /**
     * snapshot schedule
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    interval?: string;
    /**
     * max space on disk to use for snapshots
     * @type {number}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    local_max_space?: number;
    /**
     * directory (local) or bucket prefix (cloud) for snapshot
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    path_prefix?: string;
    /**
     * how many snapshots to keep
     * @type {number}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    retain?: number;
    /**
     * type of storage to use for the snapshots
     * @type {string}
     * @memberof SystemWriteStorageRaftSnapshotAutoConfigNameRequest
     */
    storage_type?: SystemWriteStorageRaftSnapshotAutoConfigNameRequestStorageTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum SystemWriteStorageRaftSnapshotAutoConfigNameRequestStorageTypeEnum {
    LOCAL = 'local',
    AZURE_BLOB = 'azure-blob',
    AWS_S3 = 'aws-s3',
    GOOGLE_GCS = 'google-gcs'
}


/**
 * Check if a given object implements the SystemWriteStorageRaftSnapshotAutoConfigNameRequest interface.
 */
export function instanceOfSystemWriteStorageRaftSnapshotAutoConfigNameRequest(value: object): value is SystemWriteStorageRaftSnapshotAutoConfigNameRequest {
    return true;
}

export function SystemWriteStorageRaftSnapshotAutoConfigNameRequestFromJSON(json: any): SystemWriteStorageRaftSnapshotAutoConfigNameRequest {
    return SystemWriteStorageRaftSnapshotAutoConfigNameRequestFromJSONTyped(json, false);
}

export function SystemWriteStorageRaftSnapshotAutoConfigNameRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemWriteStorageRaftSnapshotAutoConfigNameRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'aws_access_key_id': json['aws_access_key_id'] == null ? undefined : json['aws_access_key_id'],
        'aws_s3_bucket': json['aws_s3_bucket'] == null ? undefined : json['aws_s3_bucket'],
        'aws_s3_disable_tls': json['aws_s3_disable_tls'] == null ? undefined : json['aws_s3_disable_tls'],
        'aws_s3_enable_kms': json['aws_s3_enable_kms'] == null ? undefined : json['aws_s3_enable_kms'],
        'aws_s3_endpoint': json['aws_s3_endpoint'] == null ? undefined : json['aws_s3_endpoint'],
        'aws_s3_force_path_style': json['aws_s3_force_path_style'] == null ? undefined : json['aws_s3_force_path_style'],
        'aws_s3_kms_key': json['aws_s3_kms_key'] == null ? undefined : json['aws_s3_kms_key'],
        'aws_s3_region': json['aws_s3_region'] == null ? undefined : json['aws_s3_region'],
        'aws_s3_server_side_encryption': json['aws_s3_server_side_encryption'] == null ? undefined : json['aws_s3_server_side_encryption'],
        'aws_secret_access_key': json['aws_secret_access_key'] == null ? undefined : json['aws_secret_access_key'],
        'aws_session_token': json['aws_session_token'] == null ? undefined : json['aws_session_token'],
        'azure_account_key': json['azure_account_key'] == null ? undefined : json['azure_account_key'],
        'azure_account_name': json['azure_account_name'] == null ? undefined : json['azure_account_name'],
        'azure_auth_mode': json['azure_auth_mode'] == null ? undefined : json['azure_auth_mode'],
        'azure_blob_environment': json['azure_blob_environment'] == null ? undefined : json['azure_blob_environment'],
        'azure_client_id': json['azure_client_id'] == null ? undefined : json['azure_client_id'],
        'azure_container_name': json['azure_container_name'] == null ? undefined : json['azure_container_name'],
        'azure_endpoint': json['azure_endpoint'] == null ? undefined : json['azure_endpoint'],
        'file_prefix': json['file_prefix'] == null ? undefined : json['file_prefix'],
        'google_disable_tls': json['google_disable_tls'] == null ? undefined : json['google_disable_tls'],
        'google_endpoint': json['google_endpoint'] == null ? undefined : json['google_endpoint'],
        'google_gcs_bucket': json['google_gcs_bucket'] == null ? undefined : json['google_gcs_bucket'],
        'google_service_account_key': json['google_service_account_key'] == null ? undefined : json['google_service_account_key'],
        'interval': json['interval'] == null ? undefined : json['interval'],
        'local_max_space': json['local_max_space'] == null ? undefined : json['local_max_space'],
        'path_prefix': json['path_prefix'] == null ? undefined : json['path_prefix'],
        'retain': json['retain'] == null ? undefined : json['retain'],
        'storage_type': json['storage_type'] == null ? undefined : json['storage_type'],
    };
}

export function SystemWriteStorageRaftSnapshotAutoConfigNameRequestToJSON(json: any): SystemWriteStorageRaftSnapshotAutoConfigNameRequest {
    return SystemWriteStorageRaftSnapshotAutoConfigNameRequestToJSONTyped(json, false);
}

export function SystemWriteStorageRaftSnapshotAutoConfigNameRequestToJSONTyped(value?: SystemWriteStorageRaftSnapshotAutoConfigNameRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aws_access_key_id': value['aws_access_key_id'],
        'aws_s3_bucket': value['aws_s3_bucket'],
        'aws_s3_disable_tls': value['aws_s3_disable_tls'],
        'aws_s3_enable_kms': value['aws_s3_enable_kms'],
        'aws_s3_endpoint': value['aws_s3_endpoint'],
        'aws_s3_force_path_style': value['aws_s3_force_path_style'],
        'aws_s3_kms_key': value['aws_s3_kms_key'],
        'aws_s3_region': value['aws_s3_region'],
        'aws_s3_server_side_encryption': value['aws_s3_server_side_encryption'],
        'aws_secret_access_key': value['aws_secret_access_key'],
        'aws_session_token': value['aws_session_token'],
        'azure_account_key': value['azure_account_key'],
        'azure_account_name': value['azure_account_name'],
        'azure_auth_mode': value['azure_auth_mode'],
        'azure_blob_environment': value['azure_blob_environment'],
        'azure_client_id': value['azure_client_id'],
        'azure_container_name': value['azure_container_name'],
        'azure_endpoint': value['azure_endpoint'],
        'file_prefix': value['file_prefix'],
        'google_disable_tls': value['google_disable_tls'],
        'google_endpoint': value['google_endpoint'],
        'google_gcs_bucket': value['google_gcs_bucket'],
        'google_service_account_key': value['google_service_account_key'],
        'interval': value['interval'],
        'local_max_space': value['local_max_space'],
        'path_prefix': value['path_prefix'],
        'retain': value['retain'],
        'storage_type': value['storage_type'],
    };
}


/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PkiConfigureAutoTidyResponse
 */
export interface PkiConfigureAutoTidyResponse {
    /**
     * Safety buffer after creation after which accounts lacking orders are revoked
     * @type {number}
     * @memberof PkiConfigureAutoTidyResponse
     */
    acme_account_safety_buffer?: number;
    /**
     * Specifies whether automatic tidy is enabled or not
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    enabled?: boolean;
    /**
     * Specifies the duration between automatic tidy operation
     * @type {number}
     * @memberof PkiConfigureAutoTidyResponse
     */
    interval_duration?: number;
    /**
     * Issuer safety buffer
     * @type {number}
     * @memberof PkiConfigureAutoTidyResponse
     */
    issuer_safety_buffer?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    maintain_stored_certificate_counts?: boolean;
    /**
     * The maximum amount of time in seconds auto-tidy will be delayed after startup
     * @type {number}
     * @memberof PkiConfigureAutoTidyResponse
     */
    max_startup_backoff_duration?: number;
    /**
     * The minimum amount of time in seconds auto-tidy will be delayed after startup
     * @type {number}
     * @memberof PkiConfigureAutoTidyResponse
     */
    min_startup_backoff_duration?: number;
    /**
     * Duration to pause between tidying certificates
     * @type {string}
     * @memberof PkiConfigureAutoTidyResponse
     */
    pause_duration?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    publish_stored_certificate_count_metrics?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PkiConfigureAutoTidyResponse
     */
    revocation_queue_safety_buffer?: number;
    /**
     * Safety buffer time duration
     * @type {number}
     * @memberof PkiConfigureAutoTidyResponse
     */
    safety_buffer?: number;
    /**
     * Tidy Unused Acme Accounts, and Orders
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_acme?: boolean;
    /**
     * Tidy cert metadata
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_cert_metadata?: boolean;
    /**
     * Specifies whether to tidy up the certificate store
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_cert_store?: boolean;
    /**
     * Tidy CMPv2 nonce store
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_cmpv2_nonce_store?: boolean;
    /**
     * Tidy the cross-cluster revoked certificate store
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_cross_cluster_revoked_certs?: boolean;
    /**
     * Specifies whether tidy expired issuers
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_expired_issuers?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_move_legacy_ca_bundle?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_revocation_queue?: boolean;
    /**
     * Specifies whether to associate revoked certificates with their corresponding issuers
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_revoked_cert_issuer_associations?: boolean;
    /**
     * Specifies whether to remove all invalid and expired certificates from storage
     * @type {boolean}
     * @memberof PkiConfigureAutoTidyResponse
     */
    tidy_revoked_certs?: boolean;
}

/**
 * Check if a given object implements the PkiConfigureAutoTidyResponse interface.
 */
export function instanceOfPkiConfigureAutoTidyResponse(value: object): value is PkiConfigureAutoTidyResponse {
    return true;
}

export function PkiConfigureAutoTidyResponseFromJSON(json: any): PkiConfigureAutoTidyResponse {
    return PkiConfigureAutoTidyResponseFromJSONTyped(json, false);
}

export function PkiConfigureAutoTidyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PkiConfigureAutoTidyResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'acme_account_safety_buffer': json['acme_account_safety_buffer'] == null ? undefined : json['acme_account_safety_buffer'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'interval_duration': json['interval_duration'] == null ? undefined : json['interval_duration'],
        'issuer_safety_buffer': json['issuer_safety_buffer'] == null ? undefined : json['issuer_safety_buffer'],
        'maintain_stored_certificate_counts': json['maintain_stored_certificate_counts'] == null ? undefined : json['maintain_stored_certificate_counts'],
        'max_startup_backoff_duration': json['max_startup_backoff_duration'] == null ? undefined : json['max_startup_backoff_duration'],
        'min_startup_backoff_duration': json['min_startup_backoff_duration'] == null ? undefined : json['min_startup_backoff_duration'],
        'pause_duration': json['pause_duration'] == null ? undefined : json['pause_duration'],
        'publish_stored_certificate_count_metrics': json['publish_stored_certificate_count_metrics'] == null ? undefined : json['publish_stored_certificate_count_metrics'],
        'revocation_queue_safety_buffer': json['revocation_queue_safety_buffer'] == null ? undefined : json['revocation_queue_safety_buffer'],
        'safety_buffer': json['safety_buffer'] == null ? undefined : json['safety_buffer'],
        'tidy_acme': json['tidy_acme'] == null ? undefined : json['tidy_acme'],
        'tidy_cert_metadata': json['tidy_cert_metadata'] == null ? undefined : json['tidy_cert_metadata'],
        'tidy_cert_store': json['tidy_cert_store'] == null ? undefined : json['tidy_cert_store'],
        'tidy_cmpv2_nonce_store': json['tidy_cmpv2_nonce_store'] == null ? undefined : json['tidy_cmpv2_nonce_store'],
        'tidy_cross_cluster_revoked_certs': json['tidy_cross_cluster_revoked_certs'] == null ? undefined : json['tidy_cross_cluster_revoked_certs'],
        'tidy_expired_issuers': json['tidy_expired_issuers'] == null ? undefined : json['tidy_expired_issuers'],
        'tidy_move_legacy_ca_bundle': json['tidy_move_legacy_ca_bundle'] == null ? undefined : json['tidy_move_legacy_ca_bundle'],
        'tidy_revocation_queue': json['tidy_revocation_queue'] == null ? undefined : json['tidy_revocation_queue'],
        'tidy_revoked_cert_issuer_associations': json['tidy_revoked_cert_issuer_associations'] == null ? undefined : json['tidy_revoked_cert_issuer_associations'],
        'tidy_revoked_certs': json['tidy_revoked_certs'] == null ? undefined : json['tidy_revoked_certs'],
    };
}

export function PkiConfigureAutoTidyResponseToJSON(json: any): PkiConfigureAutoTidyResponse {
    return PkiConfigureAutoTidyResponseToJSONTyped(json, false);
}

export function PkiConfigureAutoTidyResponseToJSONTyped(value?: PkiConfigureAutoTidyResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acme_account_safety_buffer': value['acme_account_safety_buffer'],
        'enabled': value['enabled'],
        'interval_duration': value['interval_duration'],
        'issuer_safety_buffer': value['issuer_safety_buffer'],
        'maintain_stored_certificate_counts': value['maintain_stored_certificate_counts'],
        'max_startup_backoff_duration': value['max_startup_backoff_duration'],
        'min_startup_backoff_duration': value['min_startup_backoff_duration'],
        'pause_duration': value['pause_duration'],
        'publish_stored_certificate_count_metrics': value['publish_stored_certificate_count_metrics'],
        'revocation_queue_safety_buffer': value['revocation_queue_safety_buffer'],
        'safety_buffer': value['safety_buffer'],
        'tidy_acme': value['tidy_acme'],
        'tidy_cert_metadata': value['tidy_cert_metadata'],
        'tidy_cert_store': value['tidy_cert_store'],
        'tidy_cmpv2_nonce_store': value['tidy_cmpv2_nonce_store'],
        'tidy_cross_cluster_revoked_certs': value['tidy_cross_cluster_revoked_certs'],
        'tidy_expired_issuers': value['tidy_expired_issuers'],
        'tidy_move_legacy_ca_bundle': value['tidy_move_legacy_ca_bundle'],
        'tidy_revocation_queue': value['tidy_revocation_queue'],
        'tidy_revoked_cert_issuer_associations': value['tidy_revoked_cert_issuer_associations'],
        'tidy_revoked_certs': value['tidy_revoked_certs'],
    };
}


/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KubernetesConfigureAuthRequest
 */
export interface KubernetesConfigureAuthRequest {
    /**
     * Disable JWT issuer validation (Deprecated, will be removed in a future release)
     * @type {boolean}
     * @memberof KubernetesConfigureAuthRequest
     * @deprecated
     */
    disable_iss_validation?: boolean;
    /**
     * Disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod
     * @type {boolean}
     * @memberof KubernetesConfigureAuthRequest
     */
    disable_local_ca_jwt?: boolean;
    /**
     * Optional JWT issuer. If no issuer is specified, then this plugin will use kubernetes.io/serviceaccount as the default issuer. (Deprecated, will be removed in a future release)
     * @type {string}
     * @memberof KubernetesConfigureAuthRequest
     * @deprecated
     */
    issuer?: string;
    /**
     * Optional PEM encoded CA cert for use by the TLS client used to talk with the API. If it is not set and disable_local_ca_jwt is true, the system's trusted CA certificate pool will be used.
     * @type {string}
     * @memberof KubernetesConfigureAuthRequest
     */
    kubernetes_ca_cert?: string;
    /**
     * Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.
     * @type {string}
     * @memberof KubernetesConfigureAuthRequest
     */
    kubernetes_host?: string;
    /**
     * Optional list of PEM-formated public keys or certificates used to verify the signatures of kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
     * @type {Array<string>}
     * @memberof KubernetesConfigureAuthRequest
     */
    pem_keys?: Array<string>;
    /**
     * A service account JWT (or other token) used as a bearer token to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API.
     * @type {string}
     * @memberof KubernetesConfigureAuthRequest
     */
    token_reviewer_jwt?: string;
    /**
     * Use annotations from the client token's associated service account as alias metadata for the Vault entity. Only annotations with the prefix "vault.hashicorp.com/alias-metadata-" will be used. Note that Vault will need permission to read service accounts from the Kubernetes API.
     * @type {boolean}
     * @memberof KubernetesConfigureAuthRequest
     */
    use_annotations_as_alias_metadata?: boolean;
}

/**
 * Check if a given object implements the KubernetesConfigureAuthRequest interface.
 */
export function instanceOfKubernetesConfigureAuthRequest(value: object): value is KubernetesConfigureAuthRequest {
    return true;
}

export function KubernetesConfigureAuthRequestFromJSON(json: any): KubernetesConfigureAuthRequest {
    return KubernetesConfigureAuthRequestFromJSONTyped(json, false);
}

export function KubernetesConfigureAuthRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesConfigureAuthRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'disable_iss_validation': json['disable_iss_validation'] == null ? undefined : json['disable_iss_validation'],
        'disable_local_ca_jwt': json['disable_local_ca_jwt'] == null ? undefined : json['disable_local_ca_jwt'],
        'issuer': json['issuer'] == null ? undefined : json['issuer'],
        'kubernetes_ca_cert': json['kubernetes_ca_cert'] == null ? undefined : json['kubernetes_ca_cert'],
        'kubernetes_host': json['kubernetes_host'] == null ? undefined : json['kubernetes_host'],
        'pem_keys': json['pem_keys'] == null ? undefined : json['pem_keys'],
        'token_reviewer_jwt': json['token_reviewer_jwt'] == null ? undefined : json['token_reviewer_jwt'],
        'use_annotations_as_alias_metadata': json['use_annotations_as_alias_metadata'] == null ? undefined : json['use_annotations_as_alias_metadata'],
    };
}

export function KubernetesConfigureAuthRequestToJSON(json: any): KubernetesConfigureAuthRequest {
    return KubernetesConfigureAuthRequestToJSONTyped(json, false);
}

export function KubernetesConfigureAuthRequestToJSONTyped(value?: KubernetesConfigureAuthRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'disable_iss_validation': value['disable_iss_validation'],
        'disable_local_ca_jwt': value['disable_local_ca_jwt'],
        'issuer': value['issuer'],
        'kubernetes_ca_cert': value['kubernetes_ca_cert'],
        'kubernetes_host': value['kubernetes_host'],
        'pem_keys': value['pem_keys'],
        'token_reviewer_jwt': value['token_reviewer_jwt'],
        'use_annotations_as_alias_metadata': value['use_annotations_as_alias_metadata'],
    };
}


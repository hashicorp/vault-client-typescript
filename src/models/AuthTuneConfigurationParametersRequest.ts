/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthTuneConfigurationParametersRequest
 */
export interface AuthTuneConfigurationParametersRequest {
    /**
     * A list of headers to whitelist and allow a plugin to set on responses.
     * @type {Array<string>}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    allowed_response_headers?: Array<string>;
    /**
     * The list of keys in the request data object that will not be HMAC'd by audit devices.
     * @type {Array<string>}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    audit_non_hmac_request_keys?: Array<string>;
    /**
     * The list of keys in the response data object that will not be HMAC'd by audit devices.
     * @type {Array<string>}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    audit_non_hmac_response_keys?: Array<string>;
    /**
     * The default lease TTL for this mount.
     * @type {string}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    default_lease_ttl?: string;
    /**
     * User-friendly description for this credential backend.
     * @type {string}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    description?: string;
    /**
     * The name of the key used to sign plugin identity tokens. Defaults to the default key.
     * @type {string}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    identity_token_key?: string;
    /**
     * Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and 'hidden', with the empty default ('') behaving like 'hidden'.
     * @type {string}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    listing_visibility?: string;
    /**
     * The max lease TTL for this mount.
     * @type {string}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    max_lease_ttl?: string;
    /**
     * The options to pass into the backend. Should be a json object with string keys and values.
     * @type {object}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    options?: object;
    /**
     * A list of headers to whitelist and pass from the request to the plugin.
     * @type {Array<string>}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    passthrough_request_headers?: Array<string>;
    /**
     * The semantic version of the plugin to use, or image tag if oci_image is provided.
     * @type {string}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    plugin_version?: string;
    /**
     * The type of token to issue (service or batch).
     * @type {string}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    token_type?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    trim_request_trailing_slashes?: boolean;
    /**
     * The user lockout configuration to pass into the backend. Should be a json object with string keys and values.
     * @type {object}
     * @memberof AuthTuneConfigurationParametersRequest
     */
    user_lockout_config?: object;
}

/**
 * Check if a given object implements the AuthTuneConfigurationParametersRequest interface.
 */
export function instanceOfAuthTuneConfigurationParametersRequest(value: object): value is AuthTuneConfigurationParametersRequest {
    return true;
}

export function AuthTuneConfigurationParametersRequestFromJSON(json: any): AuthTuneConfigurationParametersRequest {
    return AuthTuneConfigurationParametersRequestFromJSONTyped(json, false);
}

export function AuthTuneConfigurationParametersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthTuneConfigurationParametersRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'allowed_response_headers': json['allowed_response_headers'] == null ? undefined : json['allowed_response_headers'],
        'audit_non_hmac_request_keys': json['audit_non_hmac_request_keys'] == null ? undefined : json['audit_non_hmac_request_keys'],
        'audit_non_hmac_response_keys': json['audit_non_hmac_response_keys'] == null ? undefined : json['audit_non_hmac_response_keys'],
        'default_lease_ttl': json['default_lease_ttl'] == null ? undefined : json['default_lease_ttl'],
        'description': json['description'] == null ? undefined : json['description'],
        'identity_token_key': json['identity_token_key'] == null ? undefined : json['identity_token_key'],
        'listing_visibility': json['listing_visibility'] == null ? undefined : json['listing_visibility'],
        'max_lease_ttl': json['max_lease_ttl'] == null ? undefined : json['max_lease_ttl'],
        'options': json['options'] == null ? undefined : json['options'],
        'passthrough_request_headers': json['passthrough_request_headers'] == null ? undefined : json['passthrough_request_headers'],
        'plugin_version': json['plugin_version'] == null ? undefined : json['plugin_version'],
        'token_type': json['token_type'] == null ? undefined : json['token_type'],
        'trim_request_trailing_slashes': json['trim_request_trailing_slashes'] == null ? undefined : json['trim_request_trailing_slashes'],
        'user_lockout_config': json['user_lockout_config'] == null ? undefined : json['user_lockout_config'],
    };
}

export function AuthTuneConfigurationParametersRequestToJSON(json: any): AuthTuneConfigurationParametersRequest {
    return AuthTuneConfigurationParametersRequestToJSONTyped(json, false);
}

export function AuthTuneConfigurationParametersRequestToJSONTyped(value?: AuthTuneConfigurationParametersRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed_response_headers': value['allowed_response_headers'],
        'audit_non_hmac_request_keys': value['audit_non_hmac_request_keys'],
        'audit_non_hmac_response_keys': value['audit_non_hmac_response_keys'],
        'default_lease_ttl': value['default_lease_ttl'],
        'description': value['description'],
        'identity_token_key': value['identity_token_key'],
        'listing_visibility': value['listing_visibility'],
        'max_lease_ttl': value['max_lease_ttl'],
        'options': value['options'],
        'passthrough_request_headers': value['passthrough_request_headers'],
        'plugin_version': value['plugin_version'],
        'token_type': value['token_type'],
        'trim_request_trailing_slashes': value['trim_request_trailing_slashes'],
        'user_lockout_config': value['user_lockout_config'],
    };
}


/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AwsConfigureRootIamCredentialsRequest
 */
export interface AwsConfigureRootIamCredentialsRequest {
    /**
     * Access key with permission to create new keys.
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    access_key?: string;
    /**
     * If set to true, will deregister all registered rotation jobs from the RotationManager for the plugin.
     * @type {boolean}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    disable_automated_rotation?: boolean;
    /**
     * Endpoint to custom IAM server URL
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    iam_endpoint?: string;
    /**
     * Audience of plugin identity tokens
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    identity_token_audience?: string;
    /**
     * Time-to-live of plugin identity tokens
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    identity_token_ttl?: string;
    /**
     * Maximum number of retries for recoverable exceptions of AWS APIs
     * @type {number}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    max_retries?: number;
    /**
     * Region for API calls.
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    region?: string;
    /**
     * Role ARN to assume for plugin identity token federation
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    role_arn?: string;
    /**
     * TTL for automatic credential rotation of the given username. Mutually exclusive with rotation_schedule
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    rotation_period?: string;
    /**
     * CRON-style string that will define the schedule on which rotations should occur. Mutually exclusive with rotation_period
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    rotation_schedule?: string;
    /**
     * Specifies the amount of time in which the rotation is allowed to occur starting from a given rotation_schedule
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    rotation_window?: string;
    /**
     * Secret key with permission to create new keys.
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    secret_key?: string;
    /**
     * Endpoint to custom STS server URL
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    sts_endpoint?: string;
    /**
     * Fallback endpoints if sts_endpoint is unreachable
     * @type {Array<string>}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    sts_fallback_endpoints?: Array<string>;
    /**
     * Fallback regions if sts_region is unreachable
     * @type {Array<string>}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    sts_fallback_regions?: Array<string>;
    /**
     * Specific region for STS API calls.
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    sts_region?: string;
    /**
     * Template to generate custom IAM usernames
     * @type {string}
     * @memberof AwsConfigureRootIamCredentialsRequest
     */
    username_template?: string;
}

/**
 * Check if a given object implements the AwsConfigureRootIamCredentialsRequest interface.
 */
export function instanceOfAwsConfigureRootIamCredentialsRequest(value: object): value is AwsConfigureRootIamCredentialsRequest {
    return true;
}

export function AwsConfigureRootIamCredentialsRequestFromJSON(json: any): AwsConfigureRootIamCredentialsRequest {
    return AwsConfigureRootIamCredentialsRequestFromJSONTyped(json, false);
}

export function AwsConfigureRootIamCredentialsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AwsConfigureRootIamCredentialsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'access_key': json['access_key'] == null ? undefined : json['access_key'],
        'disable_automated_rotation': json['disable_automated_rotation'] == null ? undefined : json['disable_automated_rotation'],
        'iam_endpoint': json['iam_endpoint'] == null ? undefined : json['iam_endpoint'],
        'identity_token_audience': json['identity_token_audience'] == null ? undefined : json['identity_token_audience'],
        'identity_token_ttl': json['identity_token_ttl'] == null ? undefined : json['identity_token_ttl'],
        'max_retries': json['max_retries'] == null ? undefined : json['max_retries'],
        'region': json['region'] == null ? undefined : json['region'],
        'role_arn': json['role_arn'] == null ? undefined : json['role_arn'],
        'rotation_period': json['rotation_period'] == null ? undefined : json['rotation_period'],
        'rotation_schedule': json['rotation_schedule'] == null ? undefined : json['rotation_schedule'],
        'rotation_window': json['rotation_window'] == null ? undefined : json['rotation_window'],
        'secret_key': json['secret_key'] == null ? undefined : json['secret_key'],
        'sts_endpoint': json['sts_endpoint'] == null ? undefined : json['sts_endpoint'],
        'sts_fallback_endpoints': json['sts_fallback_endpoints'] == null ? undefined : json['sts_fallback_endpoints'],
        'sts_fallback_regions': json['sts_fallback_regions'] == null ? undefined : json['sts_fallback_regions'],
        'sts_region': json['sts_region'] == null ? undefined : json['sts_region'],
        'username_template': json['username_template'] == null ? undefined : json['username_template'],
    };
}

export function AwsConfigureRootIamCredentialsRequestToJSON(json: any): AwsConfigureRootIamCredentialsRequest {
    return AwsConfigureRootIamCredentialsRequestToJSONTyped(json, false);
}

export function AwsConfigureRootIamCredentialsRequestToJSONTyped(value?: AwsConfigureRootIamCredentialsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_key': value['access_key'],
        'disable_automated_rotation': value['disable_automated_rotation'],
        'iam_endpoint': value['iam_endpoint'],
        'identity_token_audience': value['identity_token_audience'],
        'identity_token_ttl': value['identity_token_ttl'],
        'max_retries': value['max_retries'],
        'region': value['region'],
        'role_arn': value['role_arn'],
        'rotation_period': value['rotation_period'],
        'rotation_schedule': value['rotation_schedule'],
        'rotation_window': value['rotation_window'],
        'secret_key': value['secret_key'],
        'sts_endpoint': value['sts_endpoint'],
        'sts_fallback_endpoints': value['sts_fallback_endpoints'],
        'sts_fallback_regions': value['sts_fallback_regions'],
        'sts_region': value['sts_region'],
        'username_template': value['username_template'],
    };
}


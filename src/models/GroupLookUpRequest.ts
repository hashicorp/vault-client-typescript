/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GroupLookUpRequest
 */
export interface GroupLookUpRequest {
    /**
     * ID of the alias.
     * @type {string}
     * @memberof GroupLookUpRequest
     */
    alias_id?: string;
    /**
     * Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with 'alias_name'.
     * @type {string}
     * @memberof GroupLookUpRequest
     */
    alias_mount_accessor?: string;
    /**
     * Name of the alias. This should be supplied in conjunction with 'alias_mount_accessor'.
     * @type {string}
     * @memberof GroupLookUpRequest
     */
    alias_name?: string;
    /**
     * ID of the group.
     * @type {string}
     * @memberof GroupLookUpRequest
     */
    id?: string;
    /**
     * Name of the group.
     * @type {string}
     * @memberof GroupLookUpRequest
     */
    name?: string;
}

/**
 * Check if a given object implements the GroupLookUpRequest interface.
 */
export function instanceOfGroupLookUpRequest(value: object): value is GroupLookUpRequest {
    return true;
}

export function GroupLookUpRequestFromJSON(json: any): GroupLookUpRequest {
    return GroupLookUpRequestFromJSONTyped(json, false);
}

export function GroupLookUpRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupLookUpRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'alias_id': json['alias_id'] == null ? undefined : json['alias_id'],
        'alias_mount_accessor': json['alias_mount_accessor'] == null ? undefined : json['alias_mount_accessor'],
        'alias_name': json['alias_name'] == null ? undefined : json['alias_name'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function GroupLookUpRequestToJSON(json: any): GroupLookUpRequest {
    return GroupLookUpRequestToJSONTyped(json, false);
}

export function GroupLookUpRequestToJSONTyped(value?: GroupLookUpRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alias_id': value['alias_id'],
        'alias_mount_accessor': value['alias_mount_accessor'],
        'alias_name': value['alias_name'],
        'id': value['id'],
        'name': value['name'],
    };
}


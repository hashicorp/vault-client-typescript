/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransformConfigureNamedEncryptionKeyRequest
 */
export interface TransformConfigureNamedEncryptionKeyRequest {
    /**
     * Amount of time the key should live before being automatically rotated. A value of 0 disables automatic rotation for the key.
     * @type {string}
     * @memberof TransformConfigureNamedEncryptionKeyRequest
     */
    auto_rotate_period?: string;
    /**
     * If false, deletion of this transform is prevented.
     * @type {boolean}
     * @memberof TransformConfigureNamedEncryptionKeyRequest
     */
    deletion_allowed?: boolean;
    /**
     * If set, the minimum version of the key allowed to be decrypted.
     * @type {number}
     * @memberof TransformConfigureNamedEncryptionKeyRequest
     */
    min_decryption_version?: number;
}

/**
 * Check if a given object implements the TransformConfigureNamedEncryptionKeyRequest interface.
 */
export function instanceOfTransformConfigureNamedEncryptionKeyRequest(value: object): value is TransformConfigureNamedEncryptionKeyRequest {
    return true;
}

export function TransformConfigureNamedEncryptionKeyRequestFromJSON(json: any): TransformConfigureNamedEncryptionKeyRequest {
    return TransformConfigureNamedEncryptionKeyRequestFromJSONTyped(json, false);
}

export function TransformConfigureNamedEncryptionKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransformConfigureNamedEncryptionKeyRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'auto_rotate_period': json['auto_rotate_period'] == null ? undefined : json['auto_rotate_period'],
        'deletion_allowed': json['deletion_allowed'] == null ? undefined : json['deletion_allowed'],
        'min_decryption_version': json['min_decryption_version'] == null ? undefined : json['min_decryption_version'],
    };
}

export function TransformConfigureNamedEncryptionKeyRequestToJSON(json: any): TransformConfigureNamedEncryptionKeyRequest {
    return TransformConfigureNamedEncryptionKeyRequestToJSONTyped(json, false);
}

export function TransformConfigureNamedEncryptionKeyRequestToJSONTyped(value?: TransformConfigureNamedEncryptionKeyRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'auto_rotate_period': value['auto_rotate_period'],
        'deletion_allowed': value['deletion_allowed'],
        'min_decryption_version': value['min_decryption_version'],
    };
}


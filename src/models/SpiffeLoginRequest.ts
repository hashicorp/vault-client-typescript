/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SpiffeLoginRequest
 */
export interface SpiffeLoginRequest {
    /**
     * The name of the SPIFFE role to authenticate against.
     * @type {string}
     * @memberof SpiffeLoginRequest
     */
    role?: string;
    /**
     * Force which SVID source to use for authentication. The default 'auto' will prefer JWT SVIDsif provided, otherwise it will fallback to SVIDs from the peer x509 certificate.
     * @type {string}
     * @memberof SpiffeLoginRequest
     */
    type?: SpiffeLoginRequestTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum SpiffeLoginRequestTypeEnum {
    AUTO = 'auto',
    JWT = 'jwt',
    CERT = 'cert'
}


/**
 * Check if a given object implements the SpiffeLoginRequest interface.
 */
export function instanceOfSpiffeLoginRequest(value: object): value is SpiffeLoginRequest {
    return true;
}

export function SpiffeLoginRequestFromJSON(json: any): SpiffeLoginRequest {
    return SpiffeLoginRequestFromJSONTyped(json, false);
}

export function SpiffeLoginRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpiffeLoginRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'role': json['role'] == null ? undefined : json['role'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function SpiffeLoginRequestToJSON(json: any): SpiffeLoginRequest {
    return SpiffeLoginRequestToJSONTyped(json, false);
}

export function SpiffeLoginRequestToJSONTyped(value?: SpiffeLoginRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'role': value['role'],
        'type': value['type'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AzureLoginRequest
 */
export interface AzureLoginRequest {
    /**
     * A signed JWT
     * @type {string}
     * @memberof AzureLoginRequest
     */
    jwt?: string;
    /**
     * The resource group from the instance.
     * @type {string}
     * @memberof AzureLoginRequest
     */
    resource_group_name?: string;
    /**
     * The fully qualified ID of the resource, includingthe resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. This value is ignored if vm_name or vmss_name is specified.
     * @type {string}
     * @memberof AzureLoginRequest
     */
    resource_id?: string;
    /**
     * The token role.
     * @type {string}
     * @memberof AzureLoginRequest
     */
    role?: string;
    /**
     * The subscription id for the instance.
     * @type {string}
     * @memberof AzureLoginRequest
     */
    subscription_id?: string;
    /**
     * The name of the virtual machine. This value is ignored if vmss_name is specified.
     * @type {string}
     * @memberof AzureLoginRequest
     */
    vm_name?: string;
    /**
     * The name of the virtual machine scale set the instance is in.
     * @type {string}
     * @memberof AzureLoginRequest
     */
    vmss_name?: string;
}

/**
 * Check if a given object implements the AzureLoginRequest interface.
 */
export function instanceOfAzureLoginRequest(value: object): value is AzureLoginRequest {
    return true;
}

export function AzureLoginRequestFromJSON(json: any): AzureLoginRequest {
    return AzureLoginRequestFromJSONTyped(json, false);
}

export function AzureLoginRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AzureLoginRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'jwt': json['jwt'] == null ? undefined : json['jwt'],
        'resource_group_name': json['resource_group_name'] == null ? undefined : json['resource_group_name'],
        'resource_id': json['resource_id'] == null ? undefined : json['resource_id'],
        'role': json['role'] == null ? undefined : json['role'],
        'subscription_id': json['subscription_id'] == null ? undefined : json['subscription_id'],
        'vm_name': json['vm_name'] == null ? undefined : json['vm_name'],
        'vmss_name': json['vmss_name'] == null ? undefined : json['vmss_name'],
    };
}

export function AzureLoginRequestToJSON(json: any): AzureLoginRequest {
    return AzureLoginRequestToJSONTyped(json, false);
}

export function AzureLoginRequestToJSONTyped(value?: AzureLoginRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jwt': value['jwt'],
        'resource_group_name': value['resource_group_name'],
        'resource_id': value['resource_id'],
        'role': value['role'],
        'subscription_id': value['subscription_id'],
        'vm_name': value['vm_name'],
        'vmss_name': value['vmss_name'],
    };
}


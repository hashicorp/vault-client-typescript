/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KubernetesWriteAuthRoleRequest
 */
export interface KubernetesWriteAuthRoleRequest {
    /**
     * Source to use when deriving the Alias name. valid choices: "serviceaccount_uid" : <token.uid> e.g. 474b11b5-0f20-4f9d-8ca5-65715ab325e0 (most secure choice) "serviceaccount_name" : <namespace>/<serviceaccount> e.g. vault/vault-agent default: "serviceaccount_uid"
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    alias_name_source?: string;
    /**
     * Optional Audience claim to verify in the jwt.
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    audience?: string;
    /**
     * Use "token_bound_cidrs" instead. If this and "token_bound_cidrs" are both specified, only "token_bound_cidrs" will be used.
     * @type {Array<string>}
     * @memberof KubernetesWriteAuthRoleRequest
     * @deprecated
     */
    bound_cidrs?: Array<string>;
    /**
     * List of service account names able to access this role. If set to "*" all names are allowed.
     * @type {Array<string>}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    bound_service_account_names?: Array<string>;
    /**
     * A label selector for Kubernetes namespaces which are allowed to access this role. Accepts either a JSON or YAML object. If set with bound_service_account_namespaces, the conditions are ORed.
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    bound_service_account_namespace_selector?: string;
    /**
     * List of namespaces allowed to access this role. If set to "*" all namespaces are allowed.
     * @type {Array<string>}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    bound_service_account_namespaces?: Array<string>;
    /**
     * Use "token_max_ttl" instead. If this and "token_max_ttl" are both specified, only "token_max_ttl" will be used.
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     * @deprecated
     */
    max_ttl?: string;
    /**
     * Use "token_num_uses" instead. If this and "token_num_uses" are both specified, only "token_num_uses" will be used.
     * @type {number}
     * @memberof KubernetesWriteAuthRoleRequest
     * @deprecated
     */
    num_uses?: number;
    /**
     * Use "token_period" instead. If this and "token_period" are both specified, only "token_period" will be used.
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     * @deprecated
     */
    period?: string;
    /**
     * Use "token_policies" instead. If this and "token_policies" are both specified, only "token_policies" will be used.
     * @type {Array<string>}
     * @memberof KubernetesWriteAuthRoleRequest
     * @deprecated
     */
    policies?: Array<string>;
    /**
     * The metadata to be tied to generated tokens. This should be a list or map containing the metadata in key value pairs
     * @type {object}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_auth_metadata?: object;
    /**
     * Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
     * @type {Array<string>}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_bound_cidrs?: Array<string>;
    /**
     * If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_explicit_max_ttl?: string;
    /**
     * The maximum lifetime of the generated token
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_max_ttl?: string;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     * @type {boolean}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_no_default_policy?: boolean;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     * @type {number}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_num_uses?: number;
    /**
     * If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. "24h").
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_period?: string;
    /**
     * Comma-separated list of policies
     * @type {Array<string>}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_policies?: Array<string>;
    /**
     * The initial ttl of the token to generate
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_ttl?: string;
    /**
     * The type of token to generate, service or batch
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     */
    token_type?: string;
    /**
     * Use "token_ttl" instead. If this and "token_ttl" are both specified, only "token_ttl" will be used.
     * @type {string}
     * @memberof KubernetesWriteAuthRoleRequest
     * @deprecated
     */
    ttl?: string;
}

/**
 * Check if a given object implements the KubernetesWriteAuthRoleRequest interface.
 */
export function instanceOfKubernetesWriteAuthRoleRequest(value: object): value is KubernetesWriteAuthRoleRequest {
    return true;
}

export function KubernetesWriteAuthRoleRequestFromJSON(json: any): KubernetesWriteAuthRoleRequest {
    return KubernetesWriteAuthRoleRequestFromJSONTyped(json, false);
}

export function KubernetesWriteAuthRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesWriteAuthRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'alias_name_source': json['alias_name_source'] == null ? undefined : json['alias_name_source'],
        'audience': json['audience'] == null ? undefined : json['audience'],
        'bound_cidrs': json['bound_cidrs'] == null ? undefined : json['bound_cidrs'],
        'bound_service_account_names': json['bound_service_account_names'] == null ? undefined : json['bound_service_account_names'],
        'bound_service_account_namespace_selector': json['bound_service_account_namespace_selector'] == null ? undefined : json['bound_service_account_namespace_selector'],
        'bound_service_account_namespaces': json['bound_service_account_namespaces'] == null ? undefined : json['bound_service_account_namespaces'],
        'max_ttl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'num_uses': json['num_uses'] == null ? undefined : json['num_uses'],
        'period': json['period'] == null ? undefined : json['period'],
        'policies': json['policies'] == null ? undefined : json['policies'],
        'token_auth_metadata': json['token_auth_metadata'] == null ? undefined : json['token_auth_metadata'],
        'token_bound_cidrs': json['token_bound_cidrs'] == null ? undefined : json['token_bound_cidrs'],
        'token_explicit_max_ttl': json['token_explicit_max_ttl'] == null ? undefined : json['token_explicit_max_ttl'],
        'token_max_ttl': json['token_max_ttl'] == null ? undefined : json['token_max_ttl'],
        'token_no_default_policy': json['token_no_default_policy'] == null ? undefined : json['token_no_default_policy'],
        'token_num_uses': json['token_num_uses'] == null ? undefined : json['token_num_uses'],
        'token_period': json['token_period'] == null ? undefined : json['token_period'],
        'token_policies': json['token_policies'] == null ? undefined : json['token_policies'],
        'token_ttl': json['token_ttl'] == null ? undefined : json['token_ttl'],
        'token_type': json['token_type'] == null ? undefined : json['token_type'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
    };
}

export function KubernetesWriteAuthRoleRequestToJSON(json: any): KubernetesWriteAuthRoleRequest {
    return KubernetesWriteAuthRoleRequestToJSONTyped(json, false);
}

export function KubernetesWriteAuthRoleRequestToJSONTyped(value?: KubernetesWriteAuthRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alias_name_source': value['alias_name_source'],
        'audience': value['audience'],
        'bound_cidrs': value['bound_cidrs'],
        'bound_service_account_names': value['bound_service_account_names'],
        'bound_service_account_namespace_selector': value['bound_service_account_namespace_selector'],
        'bound_service_account_namespaces': value['bound_service_account_namespaces'],
        'max_ttl': value['max_ttl'],
        'num_uses': value['num_uses'],
        'period': value['period'],
        'policies': value['policies'],
        'token_auth_metadata': value['token_auth_metadata'],
        'token_bound_cidrs': value['token_bound_cidrs'],
        'token_explicit_max_ttl': value['token_explicit_max_ttl'],
        'token_max_ttl': value['token_max_ttl'],
        'token_no_default_policy': value['token_no_default_policy'],
        'token_num_uses': value['token_num_uses'],
        'token_period': value['token_period'],
        'token_policies': value['token_policies'],
        'token_ttl': value['token_ttl'],
        'token_type': value['token_type'],
        'ttl': value['ttl'],
    };
}


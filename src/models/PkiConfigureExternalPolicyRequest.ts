/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PkiConfigureExternalPolicyRequest
 */
export interface PkiConfigureExternalPolicyRequest {
    /**
     * Whether the external validation engine is enabled at all for this mount
     * @type {boolean}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    enabled?: boolean;
    /**
     * A JMESPath search string that will extract the entity meta data to be sent to the CIEPS service. If blank, none of the entity metadata will be sent to the service.
     * @type {string}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    entity_jmespath?: string;
    /**
     * The URL where the external policy service is accessible to vault
     * @type {string}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    external_service_url?: string;
    /**
     * A JMESPath search string that will extract the entity group information to be sent to the CIEPS service. If blank, none of the group entity metadata will be sent to the service.
     * @type {string}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    group_jmespath?: string;
    /**
     * This is how long any particular request should wait for a timeout
     * @type {string}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    timeout?: string;
    /**
     * If this is set, vault will trust any leaf-certificate issued by this certificate to be the external policy service
     * @type {string}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    trusted_ca?: string;
    /**
     * This is the PEM of the leaf certificate(s) that vault will expect to do certificate pinning
     * @type {string}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    trusted_leaf_certificate_bundle?: string;
    /**
     * The vault client certificate used to authenticate vault to the external policy engine, and theprivate key to use it.
     * @type {string}
     * @memberof PkiConfigureExternalPolicyRequest
     */
    vault_client_cert_bundle?: string;
}

/**
 * Check if a given object implements the PkiConfigureExternalPolicyRequest interface.
 */
export function instanceOfPkiConfigureExternalPolicyRequest(value: object): value is PkiConfigureExternalPolicyRequest {
    return true;
}

export function PkiConfigureExternalPolicyRequestFromJSON(json: any): PkiConfigureExternalPolicyRequest {
    return PkiConfigureExternalPolicyRequestFromJSONTyped(json, false);
}

export function PkiConfigureExternalPolicyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PkiConfigureExternalPolicyRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'entity_jmespath': json['entity_jmespath'] == null ? undefined : json['entity_jmespath'],
        'external_service_url': json['external_service_url'] == null ? undefined : json['external_service_url'],
        'group_jmespath': json['group_jmespath'] == null ? undefined : json['group_jmespath'],
        'timeout': json['timeout'] == null ? undefined : json['timeout'],
        'trusted_ca': json['trusted_ca'] == null ? undefined : json['trusted_ca'],
        'trusted_leaf_certificate_bundle': json['trusted_leaf_certificate_bundle'] == null ? undefined : json['trusted_leaf_certificate_bundle'],
        'vault_client_cert_bundle': json['vault_client_cert_bundle'] == null ? undefined : json['vault_client_cert_bundle'],
    };
}

export function PkiConfigureExternalPolicyRequestToJSON(json: any): PkiConfigureExternalPolicyRequest {
    return PkiConfigureExternalPolicyRequestToJSONTyped(json, false);
}

export function PkiConfigureExternalPolicyRequestToJSONTyped(value?: PkiConfigureExternalPolicyRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'entity_jmespath': value['entity_jmespath'],
        'external_service_url': value['external_service_url'],
        'group_jmespath': value['group_jmespath'],
        'timeout': value['timeout'],
        'trusted_ca': value['trusted_ca'],
        'trusted_leaf_certificate_bundle': value['trusted_leaf_certificate_bundle'],
        'vault_client_cert_bundle': value['vault_client_cert_bundle'],
    };
}


/**
 * Copyright (c) HashiCorp, Inc.
 */

/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SystemWriteMfaMethodOktaNameRequest
 */
export interface SystemWriteMfaMethodOktaNameRequest {
    /**
     * Okta API key.
     * @type {string}
     * @memberof SystemWriteMfaMethodOktaNameRequest
     */
    api_token?: string;
    /**
     * The base domain to use for the Okta API. When not specified in the configuration, "okta.com" is used.
     * @type {string}
     * @memberof SystemWriteMfaMethodOktaNameRequest
     */
    base_url?: string;
    /**
     * The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping.
     * @type {string}
     * @memberof SystemWriteMfaMethodOktaNameRequest
     */
    mount_accessor?: string;
    /**
     * Name of the organization to be used in the Okta API.
     * @type {string}
     * @memberof SystemWriteMfaMethodOktaNameRequest
     */
    org_name?: string;
    /**
     * If true, the username will only match the primary email for the account. Defaults to false.
     * @type {boolean}
     * @memberof SystemWriteMfaMethodOktaNameRequest
     */
    primary_email?: boolean;
    /**
     * (DEPRECATED) Use base_url instead.
     * @type {boolean}
     * @memberof SystemWriteMfaMethodOktaNameRequest
     */
    production?: boolean;
    /**
     * A format string for mapping Identity names to MFA method names. Values to subtitute should be placed in {{}}. For example, "{{alias.name}}@example.com". Currently-supported mappings: alias.name: The name returned by the mount configured via the mount_accessor parameter If blank, the Alias's name field will be used as-is.
     * @type {string}
     * @memberof SystemWriteMfaMethodOktaNameRequest
     */
    username_format?: string;
}

/**
 * Check if a given object implements the SystemWriteMfaMethodOktaNameRequest interface.
 */
export function instanceOfSystemWriteMfaMethodOktaNameRequest(value: object): value is SystemWriteMfaMethodOktaNameRequest {
    return true;
}

export function SystemWriteMfaMethodOktaNameRequestFromJSON(json: any): SystemWriteMfaMethodOktaNameRequest {
    return SystemWriteMfaMethodOktaNameRequestFromJSONTyped(json, false);
}

export function SystemWriteMfaMethodOktaNameRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemWriteMfaMethodOktaNameRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'api_token': json['api_token'] == null ? undefined : json['api_token'],
        'base_url': json['base_url'] == null ? undefined : json['base_url'],
        'mount_accessor': json['mount_accessor'] == null ? undefined : json['mount_accessor'],
        'org_name': json['org_name'] == null ? undefined : json['org_name'],
        'primary_email': json['primary_email'] == null ? undefined : json['primary_email'],
        'production': json['production'] == null ? undefined : json['production'],
        'username_format': json['username_format'] == null ? undefined : json['username_format'],
    };
}

export function SystemWriteMfaMethodOktaNameRequestToJSON(json: any): SystemWriteMfaMethodOktaNameRequest {
    return SystemWriteMfaMethodOktaNameRequestToJSONTyped(json, false);
}

export function SystemWriteMfaMethodOktaNameRequestToJSONTyped(value?: SystemWriteMfaMethodOktaNameRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'api_token': value['api_token'],
        'base_url': value['base_url'],
        'mount_accessor': value['mount_accessor'],
        'org_name': value['org_name'],
        'primary_email': value['primary_email'],
        'production': value['production'],
        'username_format': value['username_format'],
    };
}

